// https://mrcurious.medium.com/publishing-your-android-kotlin-library-to-maven-central-in-2021-df263a4f2cbc
// https://docs.gradle.org/current/userguide/publishing_maven.html

plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    id 'kotlin'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

println("Module project.name= ${project.name}")

// Published at: https://jitpack.io/#realityexpander/ScreenRoute
// 1. Push code to github
// 2. Draft a new release
// 3. Go to jitpack site link
// 4. wait for build
// 5. Add to build.gradle: implementation 'com.github.realityexpander.ScreenRoute:ScreenRoute2:0.7.22'

afterEvaluate {
    publishing {
        publications {
//            library(MavenPublication) { // works with components.java
            mavenKotlin(MavenPublication) { // works with components.kotlin
//            mavenJava(MavenPublication) { // works with components.java
                // Names the groupId to be created ie: implementation 'com.github.realityexpander.ScreenRoute:{artifactId}:{releaseId from github}'
                // Note this groupId can be completely different than the PACKAGE used by the module, but to be consistent should be the SAME.
                groupId = 'com.athanas.screenroute' // match package name for clarity

                // Names the artifact to be published ie: implementation 'com.github.realityexpander.ScreenRoute:{artifactId}:{releaseId from github}'
//                artifactId = "$project.name" // // Names the artifact to be  ie: 'com.github.realityexpander.ScreenRoute:ScreenRoute:{releaseId from github}'
//                artifactId = "ScreenRoute" // // match module name for clarity
                artifactId = project.name  // this will be "ScreenRoute"
                version = '0.7.22' // used internally inside maven

//                from components.java // works with library
                from components.kotlin // works with mavenKotlin(MavenPublication)
            }
        }
    }
}
